#!/usr/bin/env bash
set -e

# Define variables for arguments
message=""
branch=""

# Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --message)
      message="$2"
      shift 2
      ;;
    --branch)
      branch="$2"
      shift 2
      ;;
    *)
      echo "Error: Unknown argument $1" >&2
      exit 1
      ;;
  esac
done

# Check if required variables are set
if [[ -z "$message" ]]; then
  echo "Error: Message is not specified." >&2
  exit 1
fi

# Execute gh-prciwatch with arguments and capture output and exit code
output=""
exit_code=0

output=$(gh prciwatch --message="$message" --branch="$branch" 2>&1) || exit_code=$?

# Notify using terminal-notifier
case $exit_code in
  0)
    terminal-notifier -title "CI Check Passed" -message "$output"  -sound default -execute "bash -c 'echo \"$output\" | pbcopy'"
    ;;
  1)
    terminal-notifier -title "CI Check Failed" -message "$output" -sound default
    ;;
  2)
    terminal-notifier -title "CI Check Timeout" -message "PR CI TIMEOUT. open the url of pull request" -open $output -sound default
    ;;
  *)
    terminal-notifier -title "CI Check Error" -message "Error: Unexpected error occurred. Exit code: $exit_code\n$output" -sound default
    ;;
esac

exit $exit_code